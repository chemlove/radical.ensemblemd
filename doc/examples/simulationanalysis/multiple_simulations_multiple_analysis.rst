.. _multiple_simulations_instances_multiple_analysis_instance_example:

******************************************************************
Multiple Simulations Instances, Multiple Analysis Instance Example
******************************************************************


This example shows how to use the Ensemble Toolkit ``SimulationAnalysis``
pattern to execute 4 iterations of a simulation analysis loop with multiple
simulation instances and multiple analysis instances. We skip the ``pre_loop``
stage in this example. Each ``simulation_stage`` generates 16 new random ASCII
files. One ASCII file in each of its instances. In the ``analysis_stage``,
the ASCII files from the simulation instances are analyzed and character
count is performed. Each analysis instance uses the file generated by the
corresponding simulation instance. This is possible since we use the same
number of instances for simulation and analysis.The output is downloaded to
the user machine.

.. code-block:: none

	[S]    [S]    [S]    [S]    [S]    [S]    [S]    [S]
	 |      |      |      |      |      |      |      |
	[A]    [A]    [A]    [A]    [A]    [A]    [A]    [A]
	 |      |      |      |      |      |      |      |
	[S]    [S]    [S]    [S]    [S]    [S]    [S]    [S]
	 |      |      |      |      |      |      |      |
	[A]    [A]    [A]    [A]    [A]    [A]    [A]    [A]
	 :      :      :      :      :      :      :      :

Run Locally
===========

.. warning:: In order to run this example, you need access to a MongoDB server and
			 set the ``RADICAL_PILOT_DBURL`` in your environment accordingly.
			 The format is ``mongodb://hostname:port``. Read more about it
			 MongoDB in chapter :ref:`envpreparation`.

**Step 1:** View and download the example sources :ref:`below <multiple_simulations_multiple_analysis>`  or find it in 
your virtualenv under ``share/radical.ensemblemd/examples/multiple_simulations_multiple_analysis.py``.

**Step 2:** Run this example with ``RADICAL_ENTK_VERBOSE`` set to ``REPORT`` if you want to
see log messages about simulation progress::

	RADICAL_ENTK_VERBOSE=REPORT python multiple_simulations_multiple_analysis.py

Once the script has finished running, you should see the character frequency files
generated by the individual ensembles  (``cfreqs-1-1.dat``) in the in the same
directory you launched the script in. You should see as many such files as were the
number of iterations times the number of ensembles (i.e. simulation/analysis width).
Each analysis stage generates the character frequency file for each of the files
generated in the simulation stage every iteration.

You can generate a more verbose output by setting ``RADICAL_ENTK_VERBOSE=INFO``.

Run Remotely
============

By default, simulation and analysis stages run on one core your local machine.

.. literalinclude:: ../../../examples/multiple_simulations_multiple_analysis.py
	:language: python
	:lines: 69-79
	:dedent: 2


You can change the script to use a remote HPC cluster and increase the number
of cores to see how this affects the runtime of the script as the individual
pipeline instances can run in parallel.

.. code-block::

	cluster = ResourceHandle(
		resource="xsede.stampede",
		cores=16,
		walltime=30,
		username=None,  # add your username here
		project=None # add your allocation or project id here if required
		database_url=None # add your mongodb url
	)

.. _multiple_simulations_multiple_analysis:


Example Source
==============

:download:`Download multiple_simulations_multiple_analysis.py <../../../examples/multiple_simulations_multiple_analysis.py>`

.. literalinclude:: ../../../examples/multiple_simulations_multiple_analysis.py
	:language: python

