.. _simulation_analysis_example:

*************************************
Simulation Analysis Loop Example 
*************************************

This example shows how to use the Ensemble Toolkit ``SimulationAnalysis``
pattern to execute 16 iterations of a simulation analysis loop. In the
``pre_loop`` stage, a reference random ASCII file is uploaded. Each
``simulation_stage`` generates 16 new random ASCII files.  Each ``analysis_stage``
checks calculates the Levenshtein distance between  the newly generated files
and the reference file.

.. figure:: ../../images/simulation_analysis_pattern.*
   :width: 300pt
   :align: center
   :alt: Simulation-Analysis Pattern

   Fig.: `The Simulation-Analysis Pattern.`

Run Locally
===========

.. warning:: In order to run this example, you need access to a MongoDB server and
			 set the ``RADICAL_PILOT_DBURL`` in your environment accordingly.
			 The format is ``mongodb://hostname:port``. Read more about it
			 MongoDB in chapter :ref:`envpreparation`.

**Step 1:** View and download the example sources :ref:`below <example_source_simulation_analysis_loop>`  or find it in 
your virtualenv under ``share/radical.ensemblemd/examples/simulation_analysis_loop.py``.

**Step 2:** Run this example with ``RADICAL_ENMD_VERBOSE`` set to ``REPORT``::

	RADICAL_ENTK_VERBOSE=REPORT python simulation_analysis_loop.py

Once the script has finished running, you should see the SHA1 checksums
generated by the individual ensembles  (``checksumXX.sha1``) in the in the same
directory you launched the script in.

You can generate a more verbose output by setting ``RADICAL_ENTK_VERBOSE=INFO``.

Run Remotely
============

By default, simulation and analysis stages run on one core your local machine

.. literalinclude:: ../../../examples/simulation_analysis_loop.py
	:lines: 102-112
	:language: python
	:dedent: 2

You can change the script to use a remote HPC cluster and increase the number
of cores to see how this affects the runtime of the script as the individual
pipeline instances can run in parallel.

.. code-block:: python

	cluster = ResourceHandle(
		resource="xsede.stampede",
		cores=16,
		walltime=30,
		username=None,  # add your username here
		project=None # add your allocation or project id here if required
		database_url=None # add your mongodb url
	)

.. _example_source_simulation_analysis_loop:

Example Source
==============

:download:`Download simulation_analysis_loop.py <../../../examples/simulation_analysis_loop.py>`

.. literalinclude:: ../../../examples/simulation_analysis_loop.py
	:language: python


